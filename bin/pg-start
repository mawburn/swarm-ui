#!/bin/bash

# PostgreSQL startup script for SwarmUI - always runs in foreground
# Supports both Podman and Docker

# Use Podman by default, but allow Docker
CONTAINER_ENGINE="${CONTAINER_ENGINE:-podman}"

# Function to stop the container on exit
cleanup() {
    echo "Stopping PostgreSQL container..."
    $CONTAINER_ENGINE stop "${CONTAINER_NAME}" 2>/dev/null || true
    $CONTAINER_ENGINE rm "${CONTAINER_NAME}" 2>/dev/null || true
}

# Set up trap to call cleanup on script exit
trap cleanup EXIT INT TERM

# Verify container engine is available
if ! command -v "$CONTAINER_ENGINE" >/dev/null 2>&1; then
    echo "Error: $CONTAINER_ENGINE is not installed"
    if [ "$CONTAINER_ENGINE" = "podman" ]; then
        echo "You can either install Podman or set CONTAINER_ENGINE=docker"
    fi
    exit 1
fi

# Configuration
POSTGRES_USER="${POSTGRES_USER:-swarm_ui}"
POSTGRES_DB="${POSTGRES_DB:-swarm_ui}"
POSTGRES_PASSWORD="${POSTGRES_PASSWORD:-swarm_ui}"
DB_PORT="${POSTGRES_PORT:-4267}"

# Fixed names for container and volume
CONTAINER_NAME="swarm_ui_postgres"
VOLUME_NAME="swarm_ui_pg_data"
IMAGE_NAME="pgvector/pgvector:0.8.0-pg17"

# Check if the container is already running
if $CONTAINER_ENGINE ps --filter "name=^/${CONTAINER_NAME}$" --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
  echo "Container '${CONTAINER_NAME}' is already running. Stopping it..."
  $CONTAINER_ENGINE stop "${CONTAINER_NAME}"
  echo "Container stopped. Restarting in foreground..."
fi

# Check if a stopped container with the same name exists and remove it
if $CONTAINER_ENGINE ps -a --filter "name=^/${CONTAINER_NAME}$" --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
  echo "Removing existing stopped container '${CONTAINER_NAME}'..."
  $CONTAINER_ENGINE rm "${CONTAINER_NAME}"
fi

# Ensure the volume exists
if ! $CONTAINER_ENGINE volume exists "${VOLUME_NAME}"; then
  echo "Creating volume '${VOLUME_NAME}'..."
  $CONTAINER_ENGINE volume create "${VOLUME_NAME}"
fi

echo "Starting PostgreSQL container '${CONTAINER_NAME}' on port ${DB_PORT}..."

# Run the container in foreground
$CONTAINER_ENGINE run \
  --rm \
  --name "${CONTAINER_NAME}" \
  -e POSTGRES_USER="${POSTGRES_USER}" \
  -e POSTGRES_PASSWORD="${POSTGRES_PASSWORD}" \
  -e POSTGRES_DB="${POSTGRES_DB}" \
  -p 127.0.0.1:${DB_PORT}:5432 \
  -v "${VOLUME_NAME}:/var/lib/postgresql/data:Z" \
  "${IMAGE_NAME}"